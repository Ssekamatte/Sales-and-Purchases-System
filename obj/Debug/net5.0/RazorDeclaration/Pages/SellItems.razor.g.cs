// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace Sales.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
#nullable restore
#line 1 "C:\MVC Projects\Blazor project\Sales\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\MVC Projects\Blazor project\Sales\_Imports.razor"
using Microsoft.AspNetCore.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\MVC Projects\Blazor project\Sales\_Imports.razor"
using Microsoft.AspNetCore.Components.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\MVC Projects\Blazor project\Sales\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "C:\MVC Projects\Blazor project\Sales\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "C:\MVC Projects\Blazor project\Sales\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "C:\MVC Projects\Blazor project\Sales\_Imports.razor"
using Microsoft.AspNetCore.Components.Web.Virtualization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "C:\MVC Projects\Blazor project\Sales\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "C:\MVC Projects\Blazor project\Sales\_Imports.razor"
using Sales;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "C:\MVC Projects\Blazor project\Sales\_Imports.razor"
using Sales.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 11 "C:\MVC Projects\Blazor project\Sales\_Imports.razor"
using Syncfusion.Blazor;

#line default
#line hidden
#nullable disable
#nullable restore
#line 12 "C:\MVC Projects\Blazor project\Sales\_Imports.razor"
using Syncfusion.Blazor.Calendars;

#line default
#line hidden
#nullable disable
#nullable restore
#line 13 "C:\MVC Projects\Blazor project\Sales\_Imports.razor"
using Syncfusion.Blazor.DropDowns;

#line default
#line hidden
#nullable disable
#nullable restore
#line 14 "C:\MVC Projects\Blazor project\Sales\_Imports.razor"
using Syncfusion.Blazor.Grids;

#line default
#line hidden
#nullable disable
#nullable restore
#line 15 "C:\MVC Projects\Blazor project\Sales\_Imports.razor"
using Syncfusion.Blazor.Inputs;

#line default
#line hidden
#nullable disable
#nullable restore
#line 17 "C:\MVC Projects\Blazor project\Sales\_Imports.razor"
using Syncfusion.Blazor.Navigations;

#line default
#line hidden
#nullable disable
#nullable restore
#line 18 "C:\MVC Projects\Blazor project\Sales\_Imports.razor"
using Syncfusion.Blazor.Spinner;

#line default
#line hidden
#nullable disable
#nullable restore
#line 19 "C:\MVC Projects\Blazor project\Sales\_Imports.razor"
using BlazorStrap;

#line default
#line hidden
#nullable disable
#nullable restore
#line 20 "C:\MVC Projects\Blazor project\Sales\_Imports.razor"
using Syncfusion.Blazor.Notifications;

#line default
#line hidden
#nullable disable
#nullable restore
#line 21 "C:\MVC Projects\Blazor project\Sales\_Imports.razor"
using Blazored.Toast;

#line default
#line hidden
#nullable disable
#nullable restore
#line 22 "C:\MVC Projects\Blazor project\Sales\_Imports.razor"
using Blazored.Toast.Services;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\MVC Projects\Blazor project\Sales\Pages\SellItems.razor"
using Sales.ViewModel;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\MVC Projects\Blazor project\Sales\Pages\SellItems.razor"
using Microsoft.AspNetCore.Components;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\MVC Projects\Blazor project\Sales\Pages\SellItems.razor"
using Sales.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "C:\MVC Projects\Blazor project\Sales\Pages\SellItems.razor"
using Sales.Data;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "C:\MVC Projects\Blazor project\Sales\Pages\SellItems.razor"
using System.Collections;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "C:\MVC Projects\Blazor project\Sales\Pages\SellItems.razor"
using Microsoft.EntityFrameworkCore;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "C:\MVC Projects\Blazor project\Sales\Pages\SellItems.razor"
using Syncfusion.Blazor.Data;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "C:\MVC Projects\Blazor project\Sales\Pages\SellItems.razor"
using Microsoft.AspNetCore.Hosting;

#line default
#line hidden
#nullable disable
    [Microsoft.AspNetCore.Components.RouteAttribute("/SellItems")]
    public partial class SellItems : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 108 "C:\MVC Projects\Blazor project\Sales\Pages\SellItems.razor"
       
    #region Toasters
    public static string ToastContent { get; set; }
    SfToast ToastObj;
    SfToast DeleteToastObj;
    private string ToastPosition = "Right";
    private int AlarmTimeout { get; set; } = 120000;
    private List<ToastModel> Toast = new List<ToastModel>
{
        new ToastModel{ Title = "Warning!", Content=ToastContent, CssClass="e-toast-warning", Icon="e-warning toast-icons" },
        new ToastModel{ Title = "Success!", Content=ToastContent, CssClass="e-toast-success", Icon="e-success toast-icons" },
        new ToastModel{ Title = "Error!", Content=ToastContent, CssClass="e-toast-danger", Icon="e-error toast-icons" },
        new ToastModel{ Title = "Information!", Content=ToastContent, CssClass="e-toast-info", Icon="e-info toast-icons" }
    };
    #endregion Toasters

    #region DropDowns
    public static List<AStock> products { get; set; }
    public static List<AUnit> units { get; set; }
    #endregion DropDowns

    protected override async Task OnInitializedAsync()
    {
        products = context.AStocks.ToList();
        units = context.AUnits.ToList();
    }
    public SfGrid<ViewSale> SalesGrid;
    public SfTextBox PaymentMethodId;
    public SfTextBox PaymentMethod;
    public SfTextBox Remarks;

    public void Refresh()
    {
        SalesGrid.Refresh();
    }

    private Boolean Check = false;
    private DialogSettings DialogParams = new DialogSettings { MinHeight = "400px", Width = "550px" };

    // Customise dialogtemplate header
    public IWebHostEnvironment hostingEnv;
    public string Header { get; set; }
    public string ButtonText { get; set; }
    public string GetHeader(ViewSale Value)
    {
        if (Value.SalesId == null)
        {
            ButtonText = "Insert";
            return "Add a new Sale";
        }
        else
        {
            ButtonText = "Save Changes";
            return "Edit Sale Details for " + Value.Product;
        }
    }
    public class SalesRoutineAdapter : DataAdaptor
    {
        String result = string.Empty;
        public string message = string.Empty;
        public IJSRuntime jsRuntime;
        public UserManagement user;
        public IToastService toastService;

        public SalesRoutineAdapter(IJSRuntime jSRuntime, UserManagement _user)
        {
            jsRuntime = jSRuntime;
            user = _user;
        }

        ViewModel.AlertMessageType messageType = ViewModel.AlertMessageType.Error;

        public override object Read(DataManagerRequest dm, string key = null)
        {
            using (var _context = new SalesPurchasesContext())
            {
                var _data = _context.ViewSales.OrderByDescending(a => a.SellingDate).ToList();
                IEnumerable DataSource = _data;
                //int count = _data.Count;

                if (dm.Search != null && dm.Search.Count > 0)
                {
                    // Searching
                    DataSource = DataOperations.PerformSearching(DataSource, dm.Search);
                }
                if (dm.Sorted != null && dm.Sorted.Count > 0)
                {
                    // Sorting
                    DataSource = DataOperations.PerformSorting(DataSource, dm.Sorted);
                }
                if (dm.Where != null && dm.Where.Count > 0)
                {
                    // Filtering
                    DataSource = DataOperations.PerformFiltering(DataSource, dm.Where, dm.Where[0].Operator);
                }
                int count = DataSource.Cast<ViewSale>().Count();
                if (dm.Skip != 0)
                {
                    //Paging
                    DataSource = DataOperations.PerformSkip(DataSource, dm.Skip);
                }
                if (dm.Take != 0)
                {
                    DataSource = DataOperations.PerformTake(DataSource, dm.Take);
                }

                return dm.RequiresCounts ? new DataResult() { Result = DataSource, Count = count } : (object)DataSource;
            }
        }
        public override object Update(DataManager dataManager, object value, string keyField, string key)
        {
            using (var _context = new SalesPurchasesContext())
            {
                var val = (value as ViewSale);
                var exist = _context.Sales.FirstOrDefault(o => o.SalesId == val.SalesId);
                if (exist != null)
                {
                    exist.Product = val.Product;
                    exist.Quantity = val.Quantity;
                    //exist.UnitPrice = val.UnitPrice;
                    //exist.Amount = val.Quantity * val.UnitPrice;
                    exist.UnitId = val.UnitId;
                    //exist.SoldBy = user.GetStaffName();
                    //exist.SellingDate = DateTime.Now;
                    _context.Entry(exist).State = EntityState.Modified;
                    _context.SaveChanges();

                    SalesLog sallog = new SalesLog();
                    //Save Into Log Table
                    sallog.SalesLogId = Guid.NewGuid().ToString();
                    sallog.SalesId = val.SalesId;
                    sallog.Product = val.Product;
                    //sallog.Quantity = val.Quantity;
                    //sallog.UnitPrice = val.UnitPrice;
                    //sallog.Amount = val.Quantity * val.UnitPrice;
                    sallog.UnitId = val.UnitId;
                    sallog.UpdatedBy = user.GetStaffName();
                    sallog.UpdatedDate = DateTime.Now;

                    _context.SalesLogs.Add(sallog);
                    _context.SaveChanges();

                }
                return value;
            }
        }
        public override object Remove(DataManager dataManager, object value, string keyField, string key)
        {
            using (var _context = new SalesPurchasesContext())
            {

                //var delData = data.GetAllOrders().Where(x => x.MemberId == (string)value).FirstOrDefault();
                var delData = _context.Sales.Where(x => x.SalesId == (string)value).FirstOrDefault();
                _context.Sales.Remove(delData);
                _context.SaveChanges();

                //data.DeleteOrder((int)value);
                return delData;
            }

        }
        public override async Task<Object> InsertAsync(DataManager dataManager, object value, string key)
        {
            using (var _context = new SalesPurchasesContext())
            {
                var val = (value as ViewSale);
                Sale reg = new Sale();
                SalesLog reglog = new SalesLog();
                try
                {
                    reg.SalesId = Guid.NewGuid().ToString();
                    reg.Product = val.Product;
                    reg.Quantity = val.Quantity;
                    //reg.UnitPrice = val.UnitPrice;
                    //reg.Amount = val.Quantity * val.UnitPrice;
                    reg.UnitId = val.UnitId;
                    reg.SoldBy = user.GetStaffName();
                    reg.SellingDate = DateTime.Now;

                    //Save Into Log Table
                    reglog.SalesLogId = Guid.NewGuid().ToString();
                    reglog.SalesId = reg.SalesId;
                    reglog.Product = val.Product;
                    //reglog.Quantity = val.Quantity;
                    //reglog.UnitPrice = val.UnitPrice;
                    //reglog.Amount = val.Quantity * val.UnitPrice;
                    reglog.UnitId = val.UnitId;
                    reglog.SoldBy = user.GetStaffName();
                    reglog.SellingDate = DateTime.Now;

                    try
                    {
                        _context.Sales.Add(reg);
                        _context.SalesLogs.Add(reglog);
                        await _context.SaveChangesAsync();
                    }
                    catch (Exception ex)
                    {
                        throw ex;
                    }
                }
                catch (Exception ex)
                {
                    throw ex;
                }
            }

            return value;
        }

    }

#line default
#line hidden
#nullable disable
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IJSRuntime jsRuntime { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private UserManagement user { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private SalesPurchasesContext context { get; set; }
    }
}
#pragma warning restore 1591
