// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace Sales.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
#nullable restore
#line 1 "C:\MVC Projects\Blazor project\Sales\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\MVC Projects\Blazor project\Sales\_Imports.razor"
using Microsoft.AspNetCore.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\MVC Projects\Blazor project\Sales\_Imports.razor"
using Microsoft.AspNetCore.Components.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\MVC Projects\Blazor project\Sales\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "C:\MVC Projects\Blazor project\Sales\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "C:\MVC Projects\Blazor project\Sales\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "C:\MVC Projects\Blazor project\Sales\_Imports.razor"
using Microsoft.AspNetCore.Components.Web.Virtualization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "C:\MVC Projects\Blazor project\Sales\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "C:\MVC Projects\Blazor project\Sales\_Imports.razor"
using Sales;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "C:\MVC Projects\Blazor project\Sales\_Imports.razor"
using Sales.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 11 "C:\MVC Projects\Blazor project\Sales\_Imports.razor"
using Syncfusion.Blazor;

#line default
#line hidden
#nullable disable
#nullable restore
#line 12 "C:\MVC Projects\Blazor project\Sales\_Imports.razor"
using Syncfusion.Blazor.Calendars;

#line default
#line hidden
#nullable disable
#nullable restore
#line 13 "C:\MVC Projects\Blazor project\Sales\_Imports.razor"
using Syncfusion.Blazor.DropDowns;

#line default
#line hidden
#nullable disable
#nullable restore
#line 14 "C:\MVC Projects\Blazor project\Sales\_Imports.razor"
using Syncfusion.Blazor.Grids;

#line default
#line hidden
#nullable disable
#nullable restore
#line 15 "C:\MVC Projects\Blazor project\Sales\_Imports.razor"
using Syncfusion.Blazor.Inputs;

#line default
#line hidden
#nullable disable
#nullable restore
#line 17 "C:\MVC Projects\Blazor project\Sales\_Imports.razor"
using Syncfusion.Blazor.Navigations;

#line default
#line hidden
#nullable disable
#nullable restore
#line 18 "C:\MVC Projects\Blazor project\Sales\_Imports.razor"
using Syncfusion.Blazor.Buttons;

#line default
#line hidden
#nullable disable
#nullable restore
#line 19 "C:\MVC Projects\Blazor project\Sales\_Imports.razor"
using BlazorStrap;

#line default
#line hidden
#nullable disable
#nullable restore
#line 20 "C:\MVC Projects\Blazor project\Sales\_Imports.razor"
using Syncfusion.Blazor.Notifications;

#line default
#line hidden
#nullable disable
#nullable restore
#line 21 "C:\MVC Projects\Blazor project\Sales\_Imports.razor"
using Blazored.Toast;

#line default
#line hidden
#nullable disable
#nullable restore
#line 22 "C:\MVC Projects\Blazor project\Sales\_Imports.razor"
using Blazored.Toast.Services;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\MVC Projects\Blazor project\Sales\Pages\Saless.razor"
using Sales.ViewModel;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\MVC Projects\Blazor project\Sales\Pages\Saless.razor"
using Microsoft.AspNetCore.Components;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\MVC Projects\Blazor project\Sales\Pages\Saless.razor"
using Sales.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "C:\MVC Projects\Blazor project\Sales\Pages\Saless.razor"
using Sales.Data;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "C:\MVC Projects\Blazor project\Sales\Pages\Saless.razor"
using System.Collections;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "C:\MVC Projects\Blazor project\Sales\Pages\Saless.razor"
using Microsoft.EntityFrameworkCore;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "C:\MVC Projects\Blazor project\Sales\Pages\Saless.razor"
using Syncfusion.Blazor.Data;

#line default
#line hidden
#nullable disable
    [Microsoft.AspNetCore.Components.RouteAttribute("/Saless")]
    public partial class Saless : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 136 "C:\MVC Projects\Blazor project\Sales\Pages\Saless.razor"
       
    #region Toasters
    public static string ToastContent { get; set; }
    SfToast ToastObj;
    SfToast DeleteToastObj;
    private string ToastPosition = "Right";
    private int AlarmTimeout { get; set; } = 120000;
    private List<ToastModel> Toast = new List<ToastModel>
{
        new ToastModel{ Title = "Warning!", Content=ToastContent, CssClass="e-toast-warning", Icon="e-warning toast-icons" },
        new ToastModel{ Title = "Success!", Content=ToastContent, CssClass="e-toast-success", Icon="e-success toast-icons" },
        new ToastModel{ Title = "Error!", Content=ToastContent, CssClass="e-toast-danger", Icon="e-error toast-icons" },
        new ToastModel{ Title = "Information!", Content=ToastContent, CssClass="e-toast-info", Icon="e-info toast-icons" }
    };
    #endregion Toasters

    #region Queries

    private SfGrid<Sales> SalesGrid;

    public Query SalesQuery = new Query();

    #endregion Queries

    #region SalesAdapter
    public class SalesRoutineAdapter : DataAdaptor
    {
        String result = string.Empty;
        public IJSRuntime jsRuntime;
        public UserManagement user;

        // Performs BatchUpdate operation
        public override object BatchUpdate(DataManager dm, object Changed, object Added, object Deleted, string KeyField, string Key, int? dropIndex)
        {
            object value = null;
            if (Changed != null)
            {
                value = Changed;

                using (var dbContext = new SalesPurchasesContext())
                {
                    foreach (var n in (IEnumerable<AStaff>)Changed)
                    {
                        var exists = dbContext.AStaffs.FirstOrDefault(o => o.StaffRoleId == n.StaffRoleId);
                        if (exists != null)
                        {
                            exists.StaffName = n.StaffName;
                            dbContext.Entry(exists).State = EntityState.Modified;
                            dbContext.SaveChanges();
                        }
                        else
                        {
                            AStaff reg = new AStaff();
                            reg.StaffRoleId = new Guid().ToString();
                            reg.StaffName = n.StaffName;
                            dbContext.AStaffs.Add(reg);
                        }
                        dbContext.SaveChanges();
                    }
                }
            }
            if (Added != null)
            {
                value = Added;

                using (var dbContext = new SalesPurchasesContext())
                {
                    foreach (var n in (IEnumerable<AStaff>)Added)
                    {
                        var exists = dbContext.AStaffs.FirstOrDefault(o => o.StaffRoleId == n.StaffRoleId);
                        if (exists == null)
                        {
                            AStaff reg = new AStaff();
                            reg.StaffRoleId = new Guid().ToString();
                            reg.StaffName = n.StaffName;
                            dbContext.AStaffs.Add(reg);
                        }
                        else
                        {
                            exists.StaffName = n.StaffName;
                            dbContext.Entry(exists).State = EntityState.Modified;
                            dbContext.SaveChanges();
                        }
                        dbContext.SaveChanges();
                    }
                }
                //foreach (var rec in (IEnumerable<spView_WebTemplate_ARVGetAll_MA_WFAResult>)Added)
                //{
                //    Orders.Add(rec);
                //}

            }
            if (Deleted != null)
            {
                //foreach (var rec in (IEnumerable<spView_WebTemplate_ARVGetAll_MA_WFAResult>)Deleted)
                //{
                //    Orders.Remove(Orders.Where(or => or.OrderID == rec.OrderID).FirstOrDefault());
                //}

            }
            return value;
        }

        public override async Task<Object> ReadAsync(DataManagerRequest dataManagerRequest, string key = null)
        {
            var data = new List<AStaff>();
            try
            {
                using (var dbContext = new SalesPurchasesContext())
                {
                    data = await dbContext.AStaffs.OrderByDescending(o => o.StaffRole).ToListAsync();
                }
            }
            catch (Exception ex)
            {

            }

            IEnumerable GridData = data;
            int _count = data.Count;
            if (dataManagerRequest.Search != null && dataManagerRequest.Search.Count > 0)
            {
                // Searching
                GridData = DataOperations.PerformSearching(GridData, dataManagerRequest.Search);
            }
            if (dataManagerRequest.Sorted?.Count > 0) // perform Sorting
            {
                GridData = DataOperations.PerformSorting(GridData, dataManagerRequest.Sorted);
            }
            if (dataManagerRequest.Skip != 0)
            {
                GridData = DataOperations.PerformSkip(GridData, dataManagerRequest.Skip); //Paging
            }
            if (dataManagerRequest.Take != 0)
            {
                GridData = DataOperations.PerformTake(GridData, dataManagerRequest.Take);
            }
            IDictionary<string, object> aggregates = new Dictionary<string, object>();
            if (dataManagerRequest.Aggregates != null) // Aggregation
            {
                aggregates = DataUtil.PerformAggregation(GridData, dataManagerRequest.Aggregates);
            }
            if (dataManagerRequest.Group != null && dataManagerRequest.Group.Any()) //Grouping
            {
                foreach (var group in dataManagerRequest.Group)
                {
                    GridData = DataUtil.Group<AStaff>(GridData, group, dataManagerRequest.Aggregates, 0, dataManagerRequest.GroupByFormatter);
                }
            }
            return dataManagerRequest.RequiresCounts ? new DataResult() { Result = GridData, Count = _count, Aggregates = aggregates } : (object)GridData;
        }

        public override async Task<Object> InsertAsync(DataManager dataManager, object value, string key)
        {
            using (var dbContext = new SalesPurchasesContext())
            {

                var val = (value as AStaff);

                AStaff reg = new AStaff();

                reg.StaffId = Guid.NewGuid().ToString();
                reg.StaffName = val.StaffName;
                reg.StaffRoleId = val.StaffRoleId;
                reg.GenderId = val.GenderId;
                reg.Email = val.Email;
                reg.Dob = val.Dob;
                reg.NinNumber = val.NinNumber;
                reg.Phone = val.Phone;
                reg.NationalityId = val.NationalityId;

                try
                {
                    dbContext.AStaffs.Add(reg);
                    await dbContext.SaveChangesAsync();

                }
                catch (Exception ex)
                {
                    throw ex;
                }
            }

            return value;
        }
        public override async Task<object> RemoveAsync(DataManager dataManager, object value, string keyField, string key)
        {
            int data = (int)value;
            var val = (value as AStaff);
            using (var dbContext = new SalesPurchasesContext())
            {
                dbContext.AStaffs.Remove(dbContext.AStaffs.FirstOrDefault(o => o.StaffRoleId == val.StaffRoleId));
                await dbContext.SaveChangesAsync();
            }

            return value;
        }
        public override async Task<object> UpdateAsync(DataManager dataManager, object value, string keyField, string key)
        {
            using (var dbContext = new SalesPurchasesContext())
            {
                var val = (value as AStaff);
                var exist = dbContext.AStaffs.FirstOrDefault(o => o.StaffRoleId == val.StaffRoleId);
                if (exist != null)
                {
                    dbContext.Entry(exist).CurrentValues.SetValues(value as AStaff);
                    dbContext.SaveChanges();

                    //exist.StaffName = val.StaffName;
                    //exist.StaffRole = val.StaffRole;
                    //exist.GenderId = val.GenderId;
                    //exist.Email = val.Email;
                    //exist.Dob = val.Dob;
                    //exist.NationalityId = val.NationalityId;
                    //exist.Phone = val.Phone;

                    //dbContext.Entry(exist).State = EntityState.Modified;
                    //await dbContext.SaveChangesAsync();
                }

            }

            return value;
        }

    }
    public string GetStaffHeader(AStaff Value)
    {
        if (Value.StaffId == null)
        {
            ButtonText = "Insert";
            return "Add a new Staff";
        }
        else
        {
            ButtonText = "Save Changes";
            return "Edit Staff Details for " + Value.StaffName;
        }
    }
    #endregion SalesAdapter


#line default
#line hidden
#nullable disable
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IJSRuntime jsRuntime { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private UserManagement user { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private SalesPurchasesContext context { get; set; }
    }
}
#pragma warning restore 1591
